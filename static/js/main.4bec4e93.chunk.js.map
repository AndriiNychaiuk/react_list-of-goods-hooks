{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","goodsFromServer","App","goodsList","useState","isInitialButtonVisible","setIsInitialButtonVisible","isReversed","setIsReversed","isSortedByLength","setIsSortedByLength","isSortedByName","setIsSortedByName","isReset","setIsReset","goodsLength","setGoodsLength","visibleGoods","filter","length","Number","sort","a","b","localeCompare","reverse","type","onClick","name","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"+NAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,6BAAgBA,GAAPA,SCNTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0HaC,EAvHO,WACpB,IAAMC,EAAS,UAAOF,GACtB,EAA4DG,oBAAS,GAArE,mBAAOC,EAAP,KAA+BC,EAA/B,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgDJ,oBAAS,GAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsCV,mBAAS,KAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACMC,EAAed,EAClBe,QAAO,SAAAlB,GAAI,OAAIA,EAAKmB,QAAUC,OAAOL,MAsBxC,OApBIN,GACFQ,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,OAASI,EAAEJ,UAGvCR,GACFM,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1ChB,GACFU,EAAaQ,UAGXZ,IACFL,GAAc,GACdE,GAAoB,GACpBE,GAAkB,GAClBE,GAAW,GACXE,EAAe,MAIf,sBAAKlB,UAAU,MAAf,WACIO,GACA,sBAAKP,UAAU,iBAAf,UACE,oBAAIA,UAAU,0BAAd,+BAAwDmB,EAAaE,OAArE,YACA,qBAAKrB,UAAU,0BAAf,SACE,cAAC,EAAD,CAAWD,MAAOoB,MAGpB,sBAAKnB,UAAU,uBAAf,UACE,wBACE4B,KAAK,SACL5B,UAAU,6BACV6B,QAAS,WACPf,GAAkB,GAClBF,GAAoB,GACpBF,GAAc,IANlB,0BAYA,wBACEkB,KAAK,SACL5B,UAAU,6BACV6B,QAAS,WACPjB,GAAoB,GACpBE,GAAkB,GAClBJ,GAAc,IANlB,4BAYA,wBACEkB,KAAK,SACL5B,UAAU,6BACV6B,QAAS,kBAAMnB,GAAeD,IAHhC,qBAQA,wBACEmB,KAAK,SACL5B,UAAU,6BACV6B,QAAS,kBAAMb,GAAW,IAH5B,sBASF,sBAAKhB,UAAU,YAAf,UACE,kEACA,yBACE8B,KAAK,SACLC,MAAOd,EACPe,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXf,EAAee,EAAOF,QAJ1B,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,yBAMPxB,GACC,wBACEqB,KAAK,SACL5B,UAAU,oBACV6B,QAAS,kBAAMrB,GAA0B,IAH3C,uBCzHR0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.4bec4e93.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"list\">\n    {goods.map(good => (\n      <li key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const goodsList = [...goodsFromServer];\n  const [isInitialButtonVisible, setIsInitialButtonVisible] = useState(true);\n  const [isReversed, setIsReversed] = useState(false);\n  const [isSortedByLength, setIsSortedByLength] = useState(false);\n  const [isSortedByName, setIsSortedByName] = useState(false);\n  const [isReset, setIsReset] = useState(false);\n  const [goodsLength, setGoodsLength] = useState('1');\n  const visibleGoods = goodsList\n    .filter(good => good.length >= Number(goodsLength));\n\n  if (isSortedByLength) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isSortedByName) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  if (isReset) {\n    setIsReversed(false);\n    setIsSortedByLength(false);\n    setIsSortedByName(false);\n    setIsReset(false);\n    setGoodsLength('1');\n  }\n\n  return (\n    <div className=\"App\">\n      {!isInitialButtonVisible && (\n        <div className=\"App__container\">\n          <h1 className=\"title has-text-centered\">{`You can see ${visibleGoods.length} goods`}</h1>\n          <div className=\"App__flex-box container\">\n            <GoodsList goods={visibleGoods} />\n          </div>\n\n          <div className=\"App__buttons buttons\">\n            <button\n              type=\"button\"\n              className=\"button is-primary is-small\"\n              onClick={() => {\n                setIsSortedByName(true);\n                setIsSortedByLength(false);\n                setIsReversed(false);\n              }}\n            >\n              Sort by name\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-primary is-small\"\n              onClick={() => {\n                setIsSortedByLength(true);\n                setIsSortedByName(false);\n                setIsReversed(false);\n              }}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-primary is-small\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-primary is-small\"\n              onClick={() => setIsReset(true)}\n            >\n              Reset\n            </button>\n          </div>\n\n          <div className=\"container\">\n            <span>Choose min length of the word </span>\n            <select\n              name=\"select\"\n              value={goodsLength}\n              onChange={({ target }) => {\n                setGoodsLength(target.value);\n              }}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n          </div>\n        </div>\n      )}\n\n      {isInitialButtonVisible && (\n        <button\n          type=\"button\"\n          className=\"button is-primary\"\n          onClick={() => setIsInitialButtonVisible(false)}\n        >\n          Start\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}